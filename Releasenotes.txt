BCD Releasenotes
----------------

Version 1.5 januari 2022
------------------------
1)  Fixed a bug in conversion from INT64 to a bcd in the "SetValueInt64" member
    As a result the full 19 digit range for the value and rest-value are now supported.

Version 1.4 december 2021
-------------------------
1)  Upgraded to Visual Studio 2022
2)  Dropped support for 32-bits version. 64-bits is now the only supported version
3)  Synchronized with the SQLComponents and Marlin projects
4)  Modernized the enumerations of information (Format, Sign, Operator)
5)  Added the choice of number of decimals on converting back to a string

Version 1.3 januari 2020
------------------------
1)  Added internal class uint128
2)  Added new class "numeric" for NUMERIC/DECIMAL
    No conversion of SQL_NUMERIC_STRUCT needed!!
    It's a work in progress....
3)  Fixed issue #1: bcd::Sine, bcd::Cosine entering endless loop on value 0.0
4)  Fixed issue #2: bcd::operator< incorrectly on value 0.0 in ArcTangent
5)  Fixed issue #3: Corrections in the test.txt output file with speed values
6)  Fixed issue #4: Incorrect "Normalization" of the mantissa when setting double values between 0 and 1
7)  Fixed issue #5: Incorrect answer when bcd::Exp on number closing on to value 0.0
8)  Fixed issue #6: Fix in adding/subtracting border values crossing 0.0 origin.
9)  Fixed issue #7: Fix for bcd::Exp on negative number
10) Fixed issue #8: Fix for conversion of AFP number to double

Version 1.2 December 2019
-------------------------
1) Added a lot of operators
2) Added performance optimalisation in double conversion
3) Added MS-Word documentation of the class
4) Changed a lot of parameters from 'CString' to 'const char*'

Version 1.1 September 2019
----------------------
1) Added the dynamic discovery of the locale settings for the thousands 
   and decimal separators in "AsDisplayString()"
2) Improved on AsDisplayString as borrowed from the SQLComponents project
3) Upgraded to VS2019 and made all 4 configurations work
   Win32/x64 Debug/Release combinations
4) Added StdException handling and converted to /EHa compilation